"use strict";function asyncGeneratorStep(t,e,r,n,o,a,i){try{var c=t[a](i),s=c.value}catch(t){return void r(t)}c.done?e(s):Promise.resolve(s).then(n,o)}function _asyncToGenerator(c){return function(){var t=this,i=arguments;return new Promise(function(e,r){var n=c.apply(t,i);function o(t){asyncGeneratorStep(n,e,r,o,a,"next",t)}function a(t){asyncGeneratorStep(n,e,r,o,a,"throw",t)}o(void 0)})}}var pause;document.querySelector("#clickMe").addEventListener("click",openPopup),document.querySelector("#clickMe1").addEventListener("click",openPopup),document.querySelector("#closePopup").addEventListener("click",closePopup);var el=$("#popup"),inner=$(".popup-inner");function openPopup(){inner.attr("style","margin-right:20px"),el.removeClass("fade-out").addClass("fade-in"),el.attr("style","visibility:visible"),$("body").css({overflow:"hidden"}),chatbot()}function closePopup(){inner.attr("style","margin-right:0px"),el.removeClass("fade-in").addClass("fade-out"),el.attr("style","visibility:hidden"),$("body").css({overflow:"auto"})}var privacyLink="http://integrityfinancialservicellc.com/wp-content/uploads/2015/05/IFS-Privacy-Pledge-and-Notification.pdf",fields={name:"",email:"",phone:"",portfolioSize:""},chatbot=function(){var e=!1;return _asyncToGenerator(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(e){t.next=26;break}return e=!0,t.next=4,writeText({text:"Our book has been requested over NaN times!",style:"text",writer:"bot"});case 4:return t.next=6,writeText({text:"All we need some information to determine whether this book suits your needs.",style:"text",writer:"bot"});case 6:return t.next=8,writeText({text:"First let's make sure you're not a robot.  Click on this bubble.",style:"button",writer:"bot"});case 8:return t.next=10,writeText({text:"I'm not a robot!",style:"text",writer:"user"});case 10:return t.next=12,writeText({text:"Perfect! What's your name?",style:"form",field:"name",writer:"bot"});case 12:return fields.name=t.sent,t.next=15,writeText({text:fields.name,style:"text",writer:"user"});case 15:return t.next=17,writeText({text:"Great! Nice to meet you ".concat(fields.name,"!"),style:"text",writer:"bot"});case 17:return t.next=19,writeText({text:"Before we go any further, we want you to know we take your data VERY seriously.",style:"text",writer:"bot"});case 19:return t.next=21,writeText({text:"<a href=".concat(privacyLink,' target="_blank">Here</a> is our privacy policy.'),style:"text",writer:"bot"});case 21:return t.next=23,writeText({text:"What's a good phone number to reach you at? (We won't spam you; only a one time confirmation)",style:"form",field:"phone",writer:"bot"});case 23:return fields.phone=t.sent,t.next=26,writeText({text:fields.phone,style:"text",writer:"user"});case 26:case"end":return t.stop()}},t)}))}();function writeText(t){return _writeText.apply(this,arguments)}function _writeText(){return(_writeText=_asyncToGenerator(regeneratorRuntime.mark(function t(e){var r,n,o,a,i,c,s,u,l,d,p;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:$(".row-current").removeClass("row-current"),$("#bot-chat-current").removeAttr("id"),$("#user-chat-current").removeAttr("id"),$("#left-tag-current").removeAttr("id"),$("#right-tag-current").removeAttr("id"),$("#popup-window").append('<div class="row align-items-center chat-row row-current"> \t\t\t\t\t\t<div class="col-md-1 col-xl-2 padding-column"> \t\t\t\t\t\t</div> \t\t\t\t\t\t<div id="left-tag-current" class="col-2 col-sm-1 logo-column"> \t\t\t\t\t\t</div> \t\t\t\t\t\t<div class="col-8 col-sm-10 col-md-8 col-xl-6 content-column"> \t\t\t\t\t\t\t<div id="bot-chat-current" class="chat-bubble bot chat-fade-in"> \t\t\t\t\t\t\t</div> \t\t\t\t\t\t\t<div id="user-chat-current" class="chat-bubble user float-right chat-fade-in"> \t\t\t\t\t\t\t</div> \t\t\t\t\t\t</div> \t\t\t\t\t\t<div id="right-tag-current" class="col-2 col-sm-1 logo-column"> \t\t\t\t\t\t</div> \t\t\t\t\t\t<div class="col-md-1 col-xl-2 padding-column"> \t\t\t\t\t\t</div> \t\t\t\t\t</div>'),"bot"===e.writer?(r=1<$(".chat-row").length?'<img id="bot-logo-current" src="images/IFSLogo.png" class="bot-logo logo-pop-in">':'<img id="bot-logo-current" src="images/IFSLogo.png" class="bot-logo">',$("#right-tag-current").append('<div id="bot-clock-current" class="bot-clock"></div>')):$("#left-tag-current").append('<div id="user-clock-current" class="user-clock"></div>'),s=new Date,s=s.getHours()+":"+s.getMinutes()+":"+s.getSeconds(),"bot"===e.writer?(n=$("#bot-chat-current"),o=$("#bot-clock-current"),i=$("#user-chat-current"),a=$("#user-clock-current"),c='<div class="clock-text bot-clock-text">'+s+"</div>",$(".bot.last").removeClass("last")):(n=$("#user-chat-current"),o=$("#user-clock-current"),i=$("#bot-chat-current"),a=$("#bot-clock-current"),$(".row-current").addClass("height-shift"),c='<div class="clock-text user-clock-text" style="height:100%;max-height:100%">'+s+"</div>",$(".user.last").removeClass("last")),n.addClass("last"),a.remove(),i.remove(),o.append(c),o.removeAttr("id"),t.t0=e.style,t.next="text"===t.t0?19:"form"===t.t0?22:"button"===t.t0?28:39;break;case 19:return n.append('<p class="chat-text">'+e.text+"</p>"),u=delay(1e3),t.abrupt("break",39);case 22:return n.append('<p class="chat-text">'+e.text+'</p><div class="input-group mb-3"> \t\t\t<input type="text" id="'.concat(e.field,'-input" class="form-control" placeholder="Your ').concat(e.field,'" aria-label="Your ').concat(e.field,'" aria-describedby="').concat(e.field,'-submit">  \n  \t\t\t<div class="input-group-append"> \t\t\t<span class="input-group-text" id="').concat(e.field,'-submit"> ok</span></div></div>')),l=$("#".concat(e.field,"-submit")),pause=!0,l.on("click",unpause),u=pauseUntil("#".concat(e.field,"-input")),t.abrupt("break",39);case 28:return(l=document.createElement("a")).style.color="black",n[0].parentNode.replaceChild(l,n[0]),l.appendChild(n[0]),l.classList.add("chat-button"),n.append('<p class="chat-text">'+e.text+"</p>"),pause=!0,n.on("click",unpause),u=pauseUntil(),t.abrupt("break",39);case 39:return"bot"===e.writer&&(1<$(".content-column").length&&(d=$(".row-current").height()/2+$("#last-bot-row").height()/2,0!==(p=$(".height-shift")).length&&p.each(function(){d+=$(this).height()}),$("#bot-logo-current").velocity({top:d},{duration:400,easing:"easeInQuad",complete:function(t){setTimeout(function(){$(t).css("visibility","hidden").removeAttr("id"),p.removeClass("height-shift")},300)}}),$("#last-bot-row").removeAttr("id"),$("#bot-logo-current").removeAttr("id"),$("bot-logo").last().attr("id","bot-logo-current")),$("#left-tag-current").append(r),$(".row-current").attr("id","last-bot-row")),t.next=42,u;case 42:return t.abrupt("return",t.sent);case 43:case"end":return t.stop()}},t)}))).apply(this,arguments)}function delay(r){return new Promise(function(t,e){setTimeout(function(){t(null)},r)})}function unpause(){pause=!1}function pauseUntil(t){return _pauseUntil.apply(this,arguments)}function _pauseUntil(){return(_pauseUntil=_asyncToGenerator(regeneratorRuntime.mark(function t(e){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(pause)return t.next=3,delay(100);t.next=5;break;case 3:t.next=0;break;case 5:return t.abrupt("return",$(e).val());case 6:case"end":return t.stop()}},t)}))).apply(this,arguments)}function encryptFormData(t){}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
