"use strict";function asyncGeneratorStep(t,e,r,n,o,a,c){try{var i=t[a](c),s=i.value}catch(t){return void r(t)}i.done?e(s):Promise.resolve(s).then(n,o)}function _asyncToGenerator(i){return function(){var t=this,c=arguments;return new Promise(function(e,r){var n=i.apply(t,c);function o(t){asyncGeneratorStep(n,e,r,o,a,"next",t)}function a(t){asyncGeneratorStep(n,e,r,o,a,"throw",t)}o(void 0)})}}var pause;document.querySelector("#clickMe").addEventListener("click",openPopup),document.querySelector("#clickMe1").addEventListener("click",openPopup),document.querySelector("#closePopup").addEventListener("click",closePopup);var el=$("#popup"),inner=$(".popup-inner");function openPopup(){inner.attr("style","margin-right:20px"),el.removeClass("fade-out").addClass("fade-in"),el.attr("style","visibility:visible"),$("body").css({overflow:"hidden"}),chatbot()}function closePopup(){inner.attr("style","margin-right:0px"),el.removeClass("fade-in").addClass("fade-out"),el.attr("style","visibility:hidden"),$("body").css({overflow:"auto"})}var privacyLink="http://integrityfinancialservicellc.com/wp-content/uploads/2015/05/IFS-Privacy-Pledge-and-Notification.pdf",fields={name:"",email:"",phone:"",portfolioSize:""},chatbot=function(){var e=!1;return _asyncToGenerator(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(e){t.next=6;break}return e=!0,t.next=4,writeText({text:"Great ".concat(fields.name,", one last thing.  We need to make sure you're a real person!  Solve the captcha below and we'll get that book sent over to you!"),style:"text",writer:"bot"});case 4:return t.next=6,writeText({text:fields.email,style:"captcha",writer:"bot"});case 6:case"end":return t.stop()}},t)}))}();function writeText(t){return _writeText.apply(this,arguments)}function _writeText(){return(_writeText=_asyncToGenerator(regeneratorRuntime.mark(function t(e){var r,n,o,a,c,i,s,l,u,p,d,v,f,h,b;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:$(".row-current").removeClass("row-current"),$("#bot-chat-current").removeAttr("id"),$("#user-chat-current").removeAttr("id"),$("#left-tag-current").removeAttr("id"),$("#right-tag-current").removeAttr("id"),$("#popup-window").append('<div class="row align-items-center chat-row row-current"> \t\t\t\t\t\t<div class="col-md-1 col-xl-2 padding-column"> \t\t\t\t\t\t</div> \t\t\t\t\t\t<div id="left-tag-current" class="col-2 col-sm-1 logo-column"> \t\t\t\t\t\t</div> \t\t\t\t\t\t<div class="col-8 col-sm-10 col-md-8 col-xl-6 content-column"> \t\t\t\t\t\t\t<div id="bot-chat-current" class="chat-bubble bot chat-fade-in"> \t\t\t\t\t\t\t</div> \t\t\t\t\t\t\t<div id="user-chat-current" class="chat-bubble user float-right chat-fade-in"> \t\t\t\t\t\t\t</div> \t\t\t\t\t\t</div> \t\t\t\t\t\t<div id="right-tag-current" class="col-2 col-sm-1 logo-column"> \t\t\t\t\t\t</div> \t\t\t\t\t\t<div class="col-md-1 col-xl-2 padding-column"> \t\t\t\t\t\t</div> \t\t\t\t\t</div>'),"bot"===e.writer?(r=1<$(".chat-row").length?'<img id="bot-logo-current" src="images/IFSLogo.png" class="bot-logo logo-pop-in">':'<img id="bot-logo-current" src="images/IFSLogo.png" class="bot-logo">',$("#right-tag-current").append('<div id="bot-clock-current" class="bot-clock"></div>')):$("#left-tag-current").append('<div id="user-clock-current" class="user-clock"></div>'),s=new Date,s=s.getHours()+":"+s.getMinutes()+":"+s.getSeconds(),"bot"===e.writer?(n=$("#bot-chat-current"),o=$("#bot-clock-current"),c=$("#user-chat-current"),a=$("#user-clock-current"),i='<div class="clock-text bot-clock-text">'+s+"</div>",$(".bot.last").removeClass("last")):(n=$("#user-chat-current"),o=$("#user-clock-current"),c=$("#bot-chat-current"),a=$("#bot-clock-current"),$(".row-current").addClass("height-shift"),i='<div class="clock-text user-clock-text" style="height:100%;max-height:100%">'+s+"</div>",$(".user.last").removeClass("last")),n.addClass("last"),a.remove(),c.remove(),o.append(i),o.removeAttr("id"),t.t0=e.style,t.next="text"===t.t0?19:"form"===t.t0?22:"portfolio"===t.t0?28:"captcha"===t.t0?38:44;break;case 19:return n.append('<p class="chat-text">'.concat(e.text,"</p>")),l=delay(1e3),t.abrupt("break",44);case 22:return n.append('<p class="chat-text">'+e.text+'</p><div class="input-group mb-3"> \t\t\t<input type="text" id="'.concat(e.field,'-input" class="form-control" placeholder="Your ').concat(e.field,'" aria-label="Your ').concat(e.field,'" aria-describedby="').concat(e.field,'-submit">  \n  \t\t\t<div class="input-group-append"> \t\t\t<span class="input-group-text" id="').concat(e.field,'-submit"> ok</span></div></div>')),u=$("#".concat(e.field,"-submit")),pause=!0,u.on("click",unpause),l=pauseUntil("#".concat(e.field,"-input"),function(t){return t.val()}),t.abrupt("break",44);case 28:for(n.append('<p class="chat-text">'+e.text+"</p>"),u=["Less than $100,000 of investable assets saved for retirement","Between $100,000 and $250,000 of investable assets saved for retirement","Between $250,000 and $500,000 of investable assets saved for retirement","Between $500,000 and $1,000,000 of investable assets saved for retirement","Over $1,000,000 of investable assets saved for retirement"],n.append('<div class="portfolio-selection">'),p=$(".portfolio-selection"),d=0,v=u;d<v.length;d++)f=v[d],p.append('<button type="button" class="btn btn-light portfolio-button">'.concat(f,"</button>"));return p.on("click","button",function(){$(this).attr("id","portfolio-size"),unpause()}),n.append("</div>"),pause=!0,l=pauseUntil("#portfolio-size",function(t){return t.text()}),t.abrupt("break",44);case 38:return n.append('<p class="chat-text">'+e.text+"</p>"),function(){grecaptcha.render("captcha_container",{sitekey:"6Ld4LyQaAAAAAAcJgIAMJQCQ3B-ArchznBkWR7A9",callback:function(t){console.log(t)}})}(),pause=!0,l=pauseUntil(),t.abrupt("break",44);case 44:return"bot"===e.writer&&(1<$(".content-column").length&&(h=$(".row-current").height()/2+$("#last-bot-row").height()/2,0!==(b=$(".height-shift")).length&&b.each(function(){h+=$(this).height()}),$("#bot-logo-current").velocity({top:h},{duration:400,easing:"easeInQuad",complete:function(t){setTimeout(function(){$(t).css("visibility","hidden").removeAttr("id"),b.removeClass("height-shift")},300)}}),$("#last-bot-row").removeAttr("id"),$("#bot-logo-current").removeAttr("id"),$("bot-logo").last().attr("id","bot-logo-current")),$("#left-tag-current").append(r),$(".row-current").attr("id","last-bot-row")),t.next=47,l;case 47:return t.abrupt("return",t.sent);case 48:case"end":return t.stop()}},t)}))).apply(this,arguments)}function delay(r){return new Promise(function(t,e){setTimeout(function(){t(null)},r)})}function unpause(){pause=!1}function pauseUntil(t,e){return _pauseUntil.apply(this,arguments)}function _pauseUntil(){return(_pauseUntil=_asyncToGenerator(regeneratorRuntime.mark(function t(e,r){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(pause)return t.next=3,delay(100);t.next=5;break;case 3:t.next=0;break;case 5:return t.abrupt("return",r($(e)));case 6:case"end":return t.stop()}},t)}))).apply(this,arguments)}function encryptFormData(t){}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
